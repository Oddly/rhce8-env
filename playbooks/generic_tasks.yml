---
- name: Generate key on nodes and set key auth for user automation
  hosts: nodes
  become: yes
  remote_user: automation
  become_user: automation
  tasks:
  - name: Debug exam_version
    debug:
      msg: "{{ exam_version }}"
  - name: Create /home/automation/.ssh/ on the nodes
    file:
      path: /home/automation/.ssh
      state: directory
      mode: '0700'

  - name: Generate a key if not present on the nodes
    openssh_keypair:
      path: /home/automation/.ssh/id_rsa
      size: 2048

  - name: Register public key of control
    command: cat /home/automation/.ssh/id_rsa.pub
    register: pub_key_control
    delegate_to: 127.0.0.1
    run_once: true
    changed_when: false

  - name: Distribute the public key of control on the nodes
    authorized_key:
      user: automation
      state: present
      key: "{{ pub_key_control.stdout }}"
    when: exam_version == 1

  - name: Remove the public key of control on the nodes
    authorized_key:
      user: automation
      state: absent
      key: "{{ pub_key_control.stdout }}"
    when: exam_version == 2

- name: Adding repos, make sudo passwordless and set locale
  hosts: all
  become: yes 
  become_user: root
  tasks:

  - name: Adding repositories to all hosts
    yum_repository:
      name: BaseOS
      baseurl: http://repo.example.com/BaseOS
      description: BaseOS
  - name: Adding repositories to all hosts
    yum_repository:
      name: AppStream
      baseurl: http://repo.example.com/AppStream
      description: AppStream

  - name: Make sudo passwordless on all nodes for the wheel group
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    become: yes
    become_user: root
    when: exam_version == 1 

  - name: Make sudo use a password on all nodes for the wheel group
    lineinfile:
      dest: /etc/sudoers
      state: absent
      regexp: '^%wheel'
      line: '%wheel ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'
    become: yes
    become_user: root
    when: exam_version == 2

  - name: Replace the 'Acceptenv' files in the sshd_config file (Prevents locale errors)
    replace:
      path: /etc/ssh/sshd_config
      regexp: '^AcceptEnv'
      replace: '#AcceptEnv'
      backup: yes

- name: Making volume group on webserver (200MB)
  hosts: webservers:!node3
  become: yes
  become_user: root
  tasks:
  - name: Make a volume group named research on /dev/sdb
    lvg:
      vg: research
      pvs: /dev/sdb
      
- name: Making volume group on database (500MB)
  hosts: database
  become: yes
  become_user: root
  tasks:
  - name: Make a volume group named research on /dev/sdb
    lvg:
      vg: research
      pvs: /dev/sdb


